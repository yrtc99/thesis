[2025-04-01 02:44:02,041]: repeat 1/3
[2025-04-01 02:44:02,042]: Manual random seed:0
[2025-04-01 02:44:02,042]: auto fixed data split seed to 0, model init seed to 0
2.6.1
cannot load google_drive_downloader, install it if needed.
Namespace(model='GCN', num_layer=2, repeat=3, num_epoch=200, dataset='Wisconsin', data_dir='../data', gpu='0', running_id='0', log_dir=None, hidden=64, moment=1, seed=0, gnn_seed=None, auto_fixed_seed=False, use_center_moment=True, lr=0.01, wd=0.005, graph_learn=True, rewiring_type='attention', lr_gl=0.001, wd_gl=0.005, thres_min_deg=3, thres_min_deg_ratio=1.0, save_dir_gl='../ckpt/', window=[10000, 10000], shuffle=[False, False], epoch_train_gl=200, epoch_finetune_gl=30, seed_gl=0, k=8, cat_self=True, drop_last=[False, False], prunning=True, epsilon=None, thres_prunning=0.3, use_cpu_cache=False, drop_edge=False, prob_drop_edge=0.0)
cpu
[Old Data] Data(x=[251, 1703], edge_index=[2, 515], y=[251], train_mask=[251], val_mask=[251], test_mask=[251])
Traceback (most recent call last):
  File "/home/rjrou/DHGR/main_ae.py", line 407, in <module>
    data = model_handler(data, k=args.k, epsilon=args.epsilon, embedding_post=True, cat_self=args.cat_self, prunning=args.prunning, thres_prunning=args.thres_prunning, load_path=load_path_gl, save_path=save_path_gl)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rjrou/miniconda3/envs/dhgr_env/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rjrou/miniconda3/envs/dhgr_env/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rjrou/DHGR/GraphLearner.py", line 591, in forward
    data_new = self.graph_learner(data, k=k, epsilon=epsilon, 
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rjrou/DHGR/attention_rewiring.py", line 278, in __call__
    new_data = self.rewiring(data, embedding=embedding_post, cat_self=cat_self, 
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rjrou/miniconda3/envs/dhgr_env/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rjrou/miniconda3/envs/dhgr_env/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rjrou/DHGR/attention_rewiring.py", line 179, in forward
    min_deg_threshold = max(thres_min_deg, int(thres_min_deg_ratio * torch.mean(node_degrees).item()))
                                                                     ^^^^^^^^^^^^^^^^^^^^^^^^
RuntimeError: mean(): could not infer output dtype. Input dtype must be either a floating point or complex dtype. Got: Long
